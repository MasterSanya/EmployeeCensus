// <auto-generated />
using System;
using EmployeeCensus.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeCensus.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeCensus.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Floor = 5,
                            Name = "IT"
                        },
                        new
                        {
                            DepartmentId = 2,
                            Floor = 3,
                            Name = "HR"
                        },
                        new
                        {
                            DepartmentId = 3,
                            Floor = 4,
                            Name = "Finance"
                        },
                        new
                        {
                            DepartmentId = 4,
                            Floor = 6,
                            Name = "Marketing"
                        },
                        new
                        {
                            DepartmentId = 5,
                            Floor = 7,
                            Name = "Sales"
                        },
                        new
                        {
                            DepartmentId = 6,
                            Floor = 2,
                            Name = "Customer Support"
                        },
                        new
                        {
                            DepartmentId = 7,
                            Floor = 8,
                            Name = "Research and Development"
                        },
                        new
                        {
                            DepartmentId = 8,
                            Floor = 5,
                            Name = "Product Management"
                        },
                        new
                        {
                            DepartmentId = 9,
                            Floor = 4,
                            Name = "Quality Assurance"
                        },
                        new
                        {
                            DepartmentId = 10,
                            Floor = 3,
                            Name = "DevOps"
                        });
                });

            modelBuilder.Entity("EmployeeCensus.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeCensus.Models.EmployeeProgrammingLanguage", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammingLanguageId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "ProgrammingLanguageId");

                    b.HasIndex("ProgrammingLanguageId");

                    b.ToTable("EmployeeProgrammingLanguages");
                });

            modelBuilder.Entity("EmployeeCensus.Models.ProgrammingLanguage", b =>
                {
                    b.Property<int>("ProgrammingLanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgrammingLanguageId"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProgrammingLanguageId");

                    b.ToTable("ProgrammingLanguages");

                    b.HasData(
                        new
                        {
                            ProgrammingLanguageId = 1,
                            Name = "C++"
                        },
                        new
                        {
                            ProgrammingLanguageId = 2,
                            Name = "C#"
                        },
                        new
                        {
                            ProgrammingLanguageId = 3,
                            Name = "Java"
                        },
                        new
                        {
                            ProgrammingLanguageId = 4,
                            Name = "Python"
                        },
                        new
                        {
                            ProgrammingLanguageId = 5,
                            Name = "PHP"
                        },
                        new
                        {
                            ProgrammingLanguageId = 6,
                            Name = "JavaScript"
                        },
                        new
                        {
                            ProgrammingLanguageId = 7,
                            Name = "Ruby"
                        },
                        new
                        {
                            ProgrammingLanguageId = 8,
                            Name = "Go"
                        },
                        new
                        {
                            ProgrammingLanguageId = 9,
                            Name = "Swift"
                        },
                        new
                        {
                            ProgrammingLanguageId = 10,
                            Name = "Kotlin"
                        });
                });

            modelBuilder.Entity("EmployeeCensus.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastActionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmployeeCensus.Models.Employee", b =>
                {
                    b.HasOne("EmployeeCensus.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeCensus.Models.EmployeeProgrammingLanguage", b =>
                {
                    b.HasOne("EmployeeCensus.Models.Employee", "Employee")
                        .WithMany("EmployeeProgrammingLanguages")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeCensus.Models.ProgrammingLanguage", "ProgrammingLanguage")
                        .WithMany("EmployeeProgrammingLanguages")
                        .HasForeignKey("ProgrammingLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ProgrammingLanguage");
                });

            modelBuilder.Entity("EmployeeCensus.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EmployeeCensus.Models.Employee", b =>
                {
                    b.Navigation("EmployeeProgrammingLanguages");
                });

            modelBuilder.Entity("EmployeeCensus.Models.ProgrammingLanguage", b =>
                {
                    b.Navigation("EmployeeProgrammingLanguages");
                });
#pragma warning restore 612, 618
        }
    }
}
